Starting >>> proto_ros2
--- stderr: proto_ros2
In file included from /usr/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/include/c++/11/algorithm:74,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
                 from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
                 from /home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:5:
/usr/include/c++/11/functional: In instantiation of ‘struct std::_Bind_check_arity<void (GimbalController::*)(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&), const std::_Placeholder<1>&>’:
/usr/include/c++/11/functional:768:12:   required from ‘struct std::_Bind_helper<false, void (GimbalController::*)(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&), const std::_Placeholder<1>&>’
/usr/include/c++/11/functional:789:5:   required by substitution of ‘template<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (GimbalController::*)(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&); _BoundArgs = {const std::_Placeholder<1>&}]’
/home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:176:99:   required from here
/usr/include/c++/11/functional:756:21: error: static assertion failed: Wrong number of arguments for pointer-to-member
  755 |       static_assert(_Varargs::value
      |                               ~~~~~
  756 |                     ? sizeof...(_BoundArgs) >= _Arity::value + 1
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  757 |                     : sizeof...(_BoundArgs) == _Arity::value + 1,
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/functional:756:21: note: ‘(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))’ evaluates to false
In file included from /opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32,
                 from /opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29,
                 from /opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20,
                 from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25,
                 from /opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21,
                 from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
                 from /home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:5:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of ‘rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>]’:
/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from ‘rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:176:62:   required from here
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27: error: no matching function for call to ‘std::function<void(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>::function(std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>&)’
  394 |       callback_variant_ = static_cast<typename scbth::callback_type>(callback);
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/future:47,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18,
                 from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
                 from /home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:5:
/usr/include/c++/11/bits/std_function.h:435:9: note: candidate: ‘template<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}]’
  435 |         function(_Functor&& __f)
      |         ^~~~~~~~
/usr/include/c++/11/bits/std_function.h:435:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/11/bits/move.h:57,
                 from /usr/include/c++/11/bits/exception_ptr.h:43,
                 from /usr/include/c++/11/exception:153,
                 from /usr/include/c++/11/ios:39,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from /home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:1:
/usr/include/c++/11/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]’:
/usr/include/c++/11/bits/std_function.h:353:8:   required by substitution of ‘template<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>::_Callable<std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>&, std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>, std::__invoke_result<std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>&, const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&> >; _Tp = void; _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}]’
/usr/include/c++/11/bits/std_function.h:434:9:   required from ‘rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from ‘rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:176:62:   required from here
/usr/include/c++/11/type_traits:2211:11: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 2211 |     using __enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~~~
In file included from /usr/include/c++/11/future:47,
                 from /opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18,
                 from /opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155,
                 from /home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:5:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of ‘rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; AllocatorT = std::allocator<void>]’:
/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:   required from ‘rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::JointState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from ‘std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::JointState_<std::allocator<void> >; CallbackT = std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::JointState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::JointState_<std::allocator<void> >, std::allocator<void> > >]’
/home/chutsu/proto_ws/src/proto_ros2/src/gimbal_dance.cpp:176:62:   required from here
/usr/include/c++/11/bits/std_function.h:404:7: note: candidate: ‘std::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}]’
  404 |       function(function&& __x) noexcept
      |       ^~~~~~~~
/usr/include/c++/11/bits/std_function.h:404:27: note:   no known conversion for argument 1 from ‘std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>’ to ‘std::function<void(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>&&’
  404 |       function(function&& __x) noexcept
      |                ~~~~~~~~~~~^~~
/usr/include/c++/11/bits/std_function.h:386:7: note: candidate: ‘std::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}]’
  386 |       function(const function& __x)
      |       ^~~~~~~~
/usr/include/c++/11/bits/std_function.h:386:32: note:   no known conversion for argument 1 from ‘std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>’ to ‘const std::function<void(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>&’
  386 |       function(const function& __x)
      |                ~~~~~~~~~~~~~~~~^~~
/usr/include/c++/11/bits/std_function.h:375:7: note: candidate: ‘std::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}; std::nullptr_t = std::nullptr_t]’
  375 |       function(nullptr_t) noexcept
      |       ^~~~~~~~
/usr/include/c++/11/bits/std_function.h:375:16: note:   no known conversion for argument 1 from ‘std::_Bind<void (GimbalController::*(std::_Placeholder<1>))(const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&)>’ to ‘std::nullptr_t’
  375 |       function(nullptr_t) noexcept
      |                ^~~~~~~~~
/usr/include/c++/11/bits/std_function.h:368:7: note: candidate: ‘std::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const std::shared_ptr<sensor_msgs::msg::JointState_<std::allocator<void> > >&}]’
  368 |       function() noexcept
      |       ^~~~~~~~
/usr/include/c++/11/bits/std_function.h:368:7: note:   candidate expects 0 arguments, 1 provided
gmake[3]: *** [CMakeFiles/gimbal_dance.dir/build.make:76: CMakeFiles/gimbal_dance.dir/src/gimbal_dance.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/Makefile2:165: CMakeFiles/gimbal_dance.dir/all] Error 2
gmake[1]: *** [Makefile:146: all] Error 2
---
Failed   <<< proto_ros2 [2.63s, exited with code 2]

Summary: 0 packages finished [2.75s]
  1 package failed: proto_ros2
  1 package had stderr output: proto_ros2
make: *** [Makefile:35: calib_sim] Error 2
