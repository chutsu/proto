CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
PROJECT(proto)

# BUILD SETTINGS
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(BUILD_SHARED_LIBS ON)

# CCACHE
FIND_PROGRAM(CCACHE_FOUND ccache)
IF(CCACHE_FOUND)
  SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
  SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
ENDIF(CCACHE_FOUND)

# DEPENDENCIES
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/cmake")
FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE(SuiteSparse REQUIRED)
FIND_PACKAGE(OpenMP REQUIRED)
FIND_PACKAGE(Eigen3 REQUIRED)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
FIND_PACKAGE(OpenMP REQUIRED)
if (OPENMP_FOUND)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

SET(PROTO_DEPS
    ${OpenCV_LIBS}
    ${CERES_LIBRARIES}
    yaml-cpp
    apriltags
    pthread)

# LIBRARY
INCLUDE_DIRECTORIES(lib)
ADD_LIBRARY(
  ${PROJECT_NAME}
  lib/aprilgrid.cpp
  lib/core.cpp
  lib/factor.cpp
)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${PROTO_DEPS})
# TARGET_COMPILE_OPTIONS(${PROJECT_NAME} PRIVATE -Wall -Wextra -Werror)
INSTALL(
  DIRECTORY lib/
  DESTINATION ${CMAKE_INSTALL_PREFIX}/include/proto
  FILES_MATCHING PATTERN "*.h*"
)
INSTALL(
  FILES cmake/ProtoConfig.cmake
  DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/cmake/Proto
)

# UNIT TESTS
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/tests)
FILE(COPY tests/test_data DESTINATION ${PROJECT_BINARY_DIR}/tests)
FILE(COPY tests/scripts DESTINATION ${PROJECT_BINARY_DIR}/tests)

SET(
  UNITTESTS
  # test_atl
  test_calib
  # test_core
  # test_euroc
  # test_kitti
  # test_dense
  # test_factor
  # test_frontend
)
FOREACH(TEST ${UNITTESTS})
  ADD_EXECUTABLE(${TEST} tests/${TEST}.cpp)
  TARGET_LINK_LIBRARIES(${TEST} ${PROJECT_NAME} ${PROTO_LIBRARIES})
  TARGET_PRECOMPILE_HEADERS(${TEST} PRIVATE core.hpp factor.hpp)
ENDFOREACH(TEST)
